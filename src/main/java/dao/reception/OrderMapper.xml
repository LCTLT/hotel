<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.reception.OrderMapper">
	<!-- 查询订单 -->
	<select id="getQueryOrderList" resultType="pojo.Order">
		select
		a.id,a.orderNo,b.hotelName,a.checkInDate,a.checkOutDate,a.payAmount,a.orderStatus,c.info,b.fileUrl
		from `order` a INNER JOIN hotel b on a.hotelId = b.hotelId
		Inner join
		dictionarydate c on a.orderStatus = c.dictCode
		<where>
		c.typeCode ='orderStatus' and userid = #{userId}
		<if test="status!=-1">
	     and a.orderStatus = #{status}
		</if>
		</where>
		order by id desc
	</select>
    
     <!-- 查看订单详情 -->
    <select id="getOrderList" resultType="pojo.Order">
    select
		a.id,a.orderNo,b.hotelName,a.checkInDate,a.checkOutDate,a.payAmount,a.orderStatus,c.info,b.fileUrl,
    b.fileUrl,b.productNo,b.hotelAddress,b.hotelPrice,a.checkInDate,a.checkOutDate,
    a.count,a.place,b.productNo,a.payAmount,
    (SELECT h.houseType from house h where h.houseId= a.houseId) AS houseType,
    (select datediff(checkOutDate,checkInDate) from `order` WHERE orderNo=#{orderNo}) as bookingDays
		from `order` a INNER JOIN hotel b on a.hotelId = b.hotelId
		Inner join
		dictionarydate c on a.orderStatus = c.dictCode
		where	c.typeCode ='orderStatus'  and a.orderNo=#{orderNo}
    </select>
    
	<!-- 收藏列表  -->
	<select id="getMycollection" resultType="pojo.Mycollection">
		SELECT *,(SELECT hotelName
		FROM hotel WHERE hotel.hotelId=mycollection.hotelById) as
		hotelName,
		(SELECT fileUrl FROM hotel WHERE hotel.hotelId=mycollection.hotelById) as
		fileUrl 
		  FROM mycollection
		  WHERE conbyUserId = (SELECT id FROM `user` WHERE phone=#{phone})
	</select>
	
	<select id="getHotelById" resultType="int">
		SELECT COUNT(*) FROM mycollection WHERE hotelById=#{hid} AND
		  conbyUserId=(SELECT id FROM `user` WHERE phone=#{phone})
	</select>

	<!-- 收藏的操作 -->
	<insert id="insertCons">
		INSERT INTO mycollection(conbyUserId,hotelById) VALUES (#{conbyUserId},#{hotelByid});
	</insert>
	<update id="updateMydata">
		UPDATE `user` SET `name`=#{name},sex=#{sex},idcard=#{idcard}
		,email=#{email},address=#{address} WHERE phone = #{phone}
	</update>
	<delete id="deleteCons">
		DELETE FROM mycollection WHERE hotelById=#{scid}
	</delete>
	<!-- 查询订单字典 -->
	<select id="getQueryDic" resultType="pojo.Dictionarydate">
		select id,typeCode,dictCode,info,typeName from dictionarydate where typeCode = 'orderStatus'
	</select>
	<!-- 支付成功修改订单状态已付款 -->
	<update id="updateOrderStatus">
		update `order` set orderStatus = 1 where id = #{id}
	</update>
	
		<!-- 添加订单 -->
	<insert id="insertOrder">
		INSERT INTO `order`(id,orderNo,hotelId,houseId,houseCount
		,checkInDate,checkOutDate,orderStatus
		,payAmount,payType,place,userId) VALUES(null
		,#{orderNo},#{hotelId},#{houseId},#{houseCount},#{checkInDates},#{checkOutDates},#{orderStatus},#{payAmount},#{payType},#{place},#{userId});
	</insert>
	<!-- 查询库存 -->
	<select id="selectRawstock" resultType="pojo.Rawstock">
		SELECT * FROM rawstock where houseId = #{houseId} and hotelId = #{hotelId}
	</select>
	<!-- 查询临时库存 -->
	<select id="getQueryRealTime" resultType="pojo.Realtimeinventory">
		select id,store from realtimeinventory where
		houseId = #{houseId} and hotelId = #{hotelId} and (
		#{dateOpen} BETWEEN recordDate and recordStopDate
		or
		#{dateExit} BETWEEN recordDate and recordStopDate)
	</select>
	<!-- 增加临时库存 -->
	<insert id="insertRealTime">
		insert into realtimeinventory values(null,#{hotelId},#{houseId},#{recordDate},#{recordStopDate},#{store})
	</insert>
	<!-- 下单成功扣减库存 -->
	<update id="updateRealTime">
		update realtimeinventory set store = #{store} where
		id = #{id}
	</update>
	<!-- 订单超时 -->
	<update id="updateOrderTime">
		update `order` set orderStatus = 2 where orderStatus = 0
	</update>
	<!-- 查询需要回库的订单 -->
	<select id="getOrderListCount" resultType="pojo.Order">
		SELECT id,hotelId,houseId,checkInDate,checkOutDate,houseCount from `order`
		where NOW() &lt; checkOutDate and remarks = '0' and (orderStatus = 2 or orderStatus = 3)
	</select>
	<!-- 更新订单回库状态 -->
	<update id="updateOrderRollback">
		update `order` set remarks = #{remarks} where id =#{id}
	</update>
</mapper>